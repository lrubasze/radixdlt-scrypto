name: Fuzzing

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Fuzzing duration [s]'
        required: true
        default: 3600
      fuzz_input_mode:
        type: choice
        description: 'Fuzz input data generation mode'
        required: true
        options:
          - raw
          - unique
          - minimize

env:
  CARGO_TERM_COLOR: always

jobs:
  transaction:
    name: Fuzz transaction (AFL)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install nextest
      uses: taiki-e/install-action@nextest

    - name: Add wasm target
      run: rustup target add wasm32-unknown-unknown

    - name: Add wasm target (nightly)
      run: rustup +nightly target add wasm32-unknown-unknown

    - name: Setup AFL
      working-directory: fuzz-tests
      run: |
        ./install_afl.sh
        sudo bash -c " \
          echo core > /proc/sys/kernel/core_pattern; \
          pushd /sys/devices/system/cpu; \
          ls cpu*/cpufreq/scaling_governor >/dev/null 2>&1\
            && echo performance | tee cpu*/cpufreq/scaling_governor >/dev/null \
            || true"

    - name: Build AFL
      working-directory: fuzz-tests
      run: |
        ./fuzz.sh afl build

    - name: Generate input for AFL
      working-directory: fuzz-tests
      run: |
        ./fuzz.sh generate-input ${{ github.event.inputs.fuzz_input_mode }}

    - name: Run AFL
      working-directory: fuzz-tests
      run: |
        screen -dmS afl_main bash -c "cargo afl fuzz -i fuzz_input/transaction -M main -T transaction -V ${{ github.inputs.duration }} -o afl/transaction target-afl/release/transaction"
        screen -dmS afl_slave1 bash -c "cargo afl fuzz -i fuzz_input/transaction -S slave1 -T transaction -V ${{ github.inputs.duration }} -o afl/transaction target-afl/release/transaction"
        screen -dmS afl_slave2 bash -c "cargo afl fuzz -i fuzz_input/transaction -S slave2 -T transaction -V ${{ github.inputs.duration }} -o afl/transaction target-afl/release/transaction"
        screen -dmS afl_slave3 bash -c "cargo afl fuzz -i fuzz_input/transaction -S slave3 -T transaction -V ${{ github.inputs.duration }} -o afl/transaction target-afl/release/transaction"

    - name: Watch AFL
      working-directory: fuzz-tests
      run: |
        while screen -ls afl >/dev/null 2>&1 ; do
          cargo afl whatsup -d afl/transaction
          sleep
        done

    - name: Generate summary
      working-directory: fuzz-tests
      run: |
        echo -e \
        "# Repo:\n \
         revision: $(git rev-parse --short HEAD)\n \
         # Stats:\n \
         $(cargo afl whatsup -d afl/transaction" > afl/summary
        cat afl/summary >> $GITHUB_STEP_SUMMARY
        find afl -type f ! -path "*/queue/*"  | tar -cvzf fuzz_transaction.tgz -T -

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: fuzz_transaction.tgz
        path: |
          fuzz_transaction.tgz
